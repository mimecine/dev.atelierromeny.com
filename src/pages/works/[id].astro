---
import Layout from "../../layouts/Layout.astro";
import {
  type CollectionEntry,
  getCollection,
  getEntry,
  render,
} from "astro:content";
import { Image } from "astro:assets";

// generate static paths for works
export async function getStaticPaths() {
  const works = await getCollection("works");
  return works.map((work) => ({
    params: { id: work.id },
    props: work,
  }));
}

type Props = CollectionEntry<"works">;

const work = Astro.props;
const { Content } = await render(work);
---

<Layout title={work.data.title || "~ Untitled ~"}>
  <section class="grid max-w-4xl mx-auto py-4">
    <div>
      {
        (work.data.image && (
          <Image
            src={work.data.image}
            alt={work.data.title || ""}
            width={1024}
            class="object-contain h-[70vh]"
          />
        )) || (
          <div class="bg-gray-200 w-80 h-60 grid grid-cols-1 place-content-center border">
            Image missing
          </div>
        )
      }
    <div class="py-4 w-full text-center font-bold">
      {work.data.title || "Untitled"}
      {work.data.year_start && `, ${work.data.year_start || "Undated"}`}
      {work.data.year_start && work.data.year_end && ` - ${work.data.year_end}`}
      {work.data.w && work.data.h && `( ${work.data.w} x ${work.data.h} )`}
      {work.data.id && `, #${work.data.id}`}
    </div>
      <!-- {work.data.description && <div>{work.data.description}</div>} -->
      <!-- {
        work.data.collections && (
          <p>
            In:{" "}
            {(
              await Promise.all(
                work.data.collections.map(async (col: string) => {
                  const entry = await getEntry("collections", col);
                  return entry?.data.title || col;
                })
              )
            ).join(", ")}
          </p>
        )
      } -->
      <Content />
    </div>
  </section>
</Layout>
